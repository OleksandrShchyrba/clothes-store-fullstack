[{"C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\index.js":"1","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\App.js":"2","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\store\\DeviceStore.js":"3","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\store\\UserStore.js":"4","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\components\\NavBar.js":"5","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\components\\AppRouter.js":"6","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\http\\userAPI.js":"7","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\routes.js":"8","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\http\\index.js":"9","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\utils\\consts.js":"10","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\pages\\DevicePage.js":"11","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\pages\\Auth.js":"12","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\pages\\Basket.js":"13","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\pages\\Shop.js":"14","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\pages\\Admin.js":"15","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\http\\deviceAPI.js":"16","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\components\\Pages.js":"17","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\components\\BrandBar.js":"18","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\components\\DeviceList.js":"19","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\components\\TypeBar.js":"20","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\components\\modals\\CreateDevice.js":"21","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\components\\modals\\CreateType.js":"22","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\components\\modals\\CreateBrand.js":"23","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\components\\DeviceItem.js":"24"},{"size":457,"mtime":1712292686348,"results":"25","hashOfConfig":"26"},{"size":893,"mtime":1712292686337,"results":"27","hashOfConfig":"26"},{"size":1363,"mtime":1712292686352,"results":"28","hashOfConfig":"26"},{"size":424,"mtime":1712292686353,"results":"29","hashOfConfig":"26"},{"size":1862,"mtime":1712301763390,"results":"30","hashOfConfig":"26"},{"size":820,"mtime":1712292686340,"results":"31","hashOfConfig":"26"},{"size":715,"mtime":1712292686347,"results":"32","hashOfConfig":"26"},{"size":810,"mtime":1712292686352,"results":"33","hashOfConfig":"26"},{"size":428,"mtime":1712292686347,"results":"34","hashOfConfig":"26"},{"size":234,"mtime":1712292686354,"results":"35","hashOfConfig":"26"},{"size":2278,"mtime":1712302431113,"results":"36","hashOfConfig":"26"},{"size":3116,"mtime":1712304063873,"results":"37","hashOfConfig":"26"},{"size":157,"mtime":1712292686350,"results":"38","hashOfConfig":"26"},{"size":1586,"mtime":1712292686351,"results":"39","hashOfConfig":"26"},{"size":1532,"mtime":1712305093770,"results":"40","hashOfConfig":"26"},{"size":1034,"mtime":1712292686346,"results":"41","hashOfConfig":"26"},{"size":831,"mtime":1712292686343,"results":"42","hashOfConfig":"26"},{"size":785,"mtime":1712292686340,"results":"43","hashOfConfig":"26"},{"size":510,"mtime":1712292686342,"results":"44","hashOfConfig":"26"},{"size":777,"mtime":1712292686343,"results":"45","hashOfConfig":"26"},{"size":6029,"mtime":1712305313429,"results":"46","hashOfConfig":"26"},{"size":1337,"mtime":1712303296143,"results":"47","hashOfConfig":"26"},{"size":1355,"mtime":1712305180909,"results":"48","hashOfConfig":"26"},{"size":1117,"mtime":1712305482668,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"18n1ith",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\index.js",[],["105","106"],"C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\App.js",["107"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport AppRouter from \"./components/AppRouter\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"./index\";\r\nimport {check} from \"./http/userAPI\";\r\nimport {Spinner} from \"react-bootstrap\";\r\n\r\nconst App = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        check().then(data => {\r\n            user.setUser(true)\r\n            user.setIsAuth(true)\r\n        }).finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return <Spinner animation={\"grow\"}/>\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <NavBar />\r\n            <AppRouter />\r\n        </BrowserRouter>\r\n    );\r\n});\r\n\r\nexport default App;\r\n","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\store\\DeviceStore.js",[],"C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\store\\UserStore.js",[],"C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\components\\NavBar.js",[],"C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\http\\userAPI.js",[],"C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\routes.js",[],"C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\http\\index.js",[],"C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\utils\\consts.js",[],"C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\pages\\DevicePage.js",["108"],"import React, {useEffect, useState} from 'react';\r\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\r\nimport bigStar from '../assets/bigStar.png'\r\nimport {useParams} from 'react-router-dom'\r\nimport {fetchOneDevice} from \"../http/deviceAPI\";\r\n\r\nconst DevicePage = () => {\r\n    const [device, setDevice] = useState({info: []})\r\n    const {id} = useParams()\r\n    useEffect(() => {\r\n        fetchOneDevice(id).then(data => setDevice(data))\r\n    }, [])\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + device.img}/>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Row className=\"d-flex flex-column align-items-center\">\r\n                        <h2>{device.name}</h2>\r\n                        <div\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:240, height: 240, backgroundSize: 'cover', fontSize:64}}\r\n                        >\r\n                            {device.rating}\r\n                        </div>\r\n                    </Row>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card\r\n                        className=\"d-flex flex-column align-items-center justify-content-around\"\r\n                        style={{width: 300, height: 300, fontSize: 32, border: '5px solid lightgray'}}\r\n                    >\r\n                        <h3>От: {device.price} USD</h3>\r\n                        <Button variant={\"outline-dark\"}>Добавить в корзину</Button>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-column m-3\">\r\n                <h1>Характеристики</h1>\r\n                {device.info.map((info, index) =>\r\n                    <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\r\n                        {info.title}: {info.description}\r\n                    </Row>\r\n                )}\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default DevicePage;\r\n","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\pages\\Auth.js",["109"],"import React, {useContext, useState} from 'react';\r\nimport {Container, Form} from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\r\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\r\nimport {login, registration} from \"../http/userAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\n\r\nconst Auth = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const isLogin = location.pathname === LOGIN_ROUTE\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const click = async () => {\r\n        try {\r\n            let data;\r\n            if (isLogin) {\r\n                data = await login(email, password);\r\n            } else {\r\n                data = await registration(email, password);\r\n            }\r\n            user.setUser(user)\r\n            user.setIsAuth(true)\r\n            history.push(SHOP_ROUTE)\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container\r\n            className=\"d-flex justify-content-center align-items-center\"\r\n            style={{height: window.innerHeight - 54}}\r\n        >\r\n            <Card style={{width: 600}} className=\"p-5\">\r\n                <h2 className=\"m-auto\">{isLogin ? 'Authorization' : \"Registration\"}</h2>\r\n                <Form className=\"d-flex flex-column\">\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Enter your email...\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Enter your password...\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                        type=\"password\"\r\n                    />\r\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\r\n                        {isLogin ?\r\n                            <div>\r\n                                Doesn't have account? <NavLink to={REGISTRATION_ROUTE}>Register</NavLink>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                Have account? <NavLink to={LOGIN_ROUTE}>Login</NavLink>\r\n                            </div>\r\n                        }\r\n                        <Button\r\n                            variant={\"outline-success\"}\r\n                            onClick={click}\r\n                        >\r\n                            {isLogin ? 'Join' : 'Registration'}\r\n                        </Button>\r\n                    </Row>\r\n\r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Auth;\r\n","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\pages\\Basket.js",[],"C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\pages\\Shop.js",["110","111"],"import React, {useContext, useEffect} from 'react';\r\nimport {Container} from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport TypeBar from \"../components/TypeBar\";\r\nimport BrandBar from \"../components/BrandBar\";\r\nimport DeviceList from \"../components/DeviceList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\r\nimport Pages from \"../components/Pages\";\r\n\r\nconst Shop = observer(() => {\r\n    const {device} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n        fetchDevices(null, null, 1, 2).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 2).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [device.page, device.selectedType, device.selectedBrand,])\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-2\">\r\n                <Col md={3}>\r\n                    <TypeBar/>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <BrandBar/>\r\n                    <DeviceList/>\r\n                    <Pages/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Shop;\r\n","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\pages\\Admin.js",[],"C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\http\\deviceAPI.js",["112"],"import {$authHost, $host} from \"./index\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createType = async (type) => {\r\n    const {data} = await $authHost.post('api/type', type)\r\n    return data\r\n}\r\n\r\nexport const fetchTypes = async () => {\r\n    const {data} = await $host.get('api/type')\r\n    return data\r\n}\r\n\r\nexport const createBrand = async (brand) => {\r\n    const {data} = await $authHost.post('api/brand', brand)\r\n    return data\r\n}\r\n\r\nexport const fetchBrands = async () => {\r\n    const {data} = await $host.get('api/brand', )\r\n    return data\r\n}\r\n\r\nexport const createDevice = async (device) => {\r\n    const {data} = await $authHost.post('api/device', device)\r\n    return data\r\n}\r\n\r\nexport const fetchDevices = async (typeId, brandId, page, limit= 5) => {\r\n    const {data} = await $host.get('api/device', {params: {\r\n            typeId, brandId, page, limit\r\n        }})\r\n    return data\r\n}\r\n\r\nexport const fetchOneDevice = async (id) => {\r\n    const {data} = await $host.get('api/device/' + id)\r\n    return data\r\n}\r\n","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\components\\Pages.js",[],"C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\components\\BrandBar.js",[],"C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\components\\DeviceList.js",[],"C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\components\\TypeBar.js",["113"],"import React, {useContext} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nconst TypeBar = observer(() => {\r\n    const {device} = useContext(Context)\r\n    return (\r\n        <ListGroup>\r\n            {device.types.map(type =>\r\n                <ListGroup.Item\r\n                    style={{cursor: 'pointer'}}\r\n                    active={type.id === device.selectedType.id}\r\n                    onClick={() => device.setSelectedType(type)}\r\n                    key={type.id}\r\n                >\r\n                    {type.name}\r\n                </ListGroup.Item>\r\n            )}\r\n        </ListGroup>\r\n    );\r\n});\r\n\r\nexport default TypeBar;\r\n","C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\components\\modals\\CreateDevice.js",["114","115"],"C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\components\\modals\\CreateType.js",[],"C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\components\\modals\\CreateBrand.js",["116"],"C:\\Users\\rapsb\\projects\\online-store-\\client\\src\\components\\DeviceItem.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":19,"column":8,"nodeType":"123","endLine":19,"endColumn":10,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"125","line":12,"column":8,"nodeType":"123","endLine":12,"endColumn":10,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":26,"column":17,"nodeType":"129","messageId":"130","endLine":26,"endColumn":21},{"ruleId":"121","severity":1,"message":"131","line":23,"column":8,"nodeType":"123","endLine":23,"endColumn":10,"suggestions":"132"},{"ruleId":"121","severity":1,"message":"131","line":30,"column":8,"nodeType":"123","endLine":30,"endColumn":65,"suggestions":"133"},{"ruleId":"127","severity":1,"message":"134","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":18},{"ruleId":"127","severity":1,"message":"135","line":4,"column":8,"nodeType":"129","messageId":"130","endLine":4,"endColumn":11},{"ruleId":"127","severity":1,"message":"136","line":5,"column":36,"nodeType":"129","messageId":"130","endLine":5,"endColumn":48},{"ruleId":"121","severity":1,"message":"131","line":18,"column":8,"nodeType":"123","endLine":18,"endColumn":10,"suggestions":"137"},{"ruleId":"127","severity":1,"message":"138","line":4,"column":22,"nodeType":"129","messageId":"130","endLine":4,"endColumn":32},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["141"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["142"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["143"],["144"],"'jwt_decode' is defined but never used.","'Col' is defined but never used.","'fetchDevices' is defined but never used.",["145"],"'createType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"150","fix":"154"},"Update the dependencies array to be: [user]",{"range":"155","text":"156"},"Update the dependencies array to be: [id]",{"range":"157","text":"158"},"Update the dependencies array to be: [device]",{"range":"159","text":"160"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"161","text":"162"},{"range":"163","text":"160"},[659,661],"[user]",[468,470],"[id]",[897,899],"[device]",[1136,1193],"[device.page, device.selectedType, device.selectedBrand, device]",[764,766]]